{
    "docs": [
        {
            "location": "/",
            "text": "Transportation Systems\n\n\nHack Oregon exploring the Call to Action: What do we know today that can guide the Transportation Infrastructure for Smart Cities of tomorrow?\n\n\nAbout the Theme\n\n\nAll around the Nation, Transportation issues are increasingly impacting the lives of everyday citizens. As the Portland Metro region continues to grow, our infrastructure feels this strain. As populations rise and streets become more crowded, augmenting our travel with the many alternative modes of Transportation the City has to offer is critical. Through the successes of CIVIC, the Hack Oregon Transportation Team is committed to providing insights and solutions into the ever-growing problems surrounding Transportation in the Portland area and beyond.\n\n\nFor Developers\n\n\nStay tuned for more information about contributing to this repository. Thanks!\n\n\nLicense\n\n\nThis project is licensed under the GNU 3 GENERAL PUBLIC LICENSE - see the \nLICENSE.md\n file for details",
            "title": "Transportation Systems"
        },
        {
            "location": "/#transportation-systems",
            "text": "Hack Oregon exploring the Call to Action: What do we know today that can guide the Transportation Infrastructure for Smart Cities of tomorrow?",
            "title": "Transportation Systems"
        },
        {
            "location": "/#about-the-theme",
            "text": "All around the Nation, Transportation issues are increasingly impacting the lives of everyday citizens. As the Portland Metro region continues to grow, our infrastructure feels this strain. As populations rise and streets become more crowded, augmenting our travel with the many alternative modes of Transportation the City has to offer is critical. Through the successes of CIVIC, the Hack Oregon Transportation Team is committed to providing insights and solutions into the ever-growing problems surrounding Transportation in the Portland area and beyond.",
            "title": "About the Theme"
        },
        {
            "location": "/#for-developers",
            "text": "Stay tuned for more information about contributing to this repository. Thanks!",
            "title": "For Developers"
        },
        {
            "location": "/#license",
            "text": "This project is licensed under the GNU 3 GENERAL PUBLIC LICENSE - see the  LICENSE.md  file for details",
            "title": "License"
        },
        {
            "location": "/docker/",
            "text": "Docker Environment\n\n\nThis portion of the guide, will walk through setting up the Docker Environment to be used for development and deployment of the 2018 Hack Oregon Transportation Systems project.\n\n\nIt will also provide some introductory information into Docker to help our volunteers get up and running in this project season.\n\n\nGetting Started - What is Docker?\n\n\nIf you are not familiar with Docker, your first step should be understanding the basics of Docker, ie how it works, some terms, and how it is different then running a full virtual machine like Vagrant.\n\n\nI would suggest watching this video to get a short introduction into Docker:\n\n\nDocker Tutorial - What is Docker & Docker Containers, Images, etc?\n\n\nThis is also a great guide to review:\n\n\nA Beginner-Friendly Introduction to Containers, VMs and Docker\n\n\nNext, you will need to install Docker if you have not already...\n\n\nInstalling Docker\n\n\nInstead of providing specific instructions here, we will link to the Docker guides on installing.\n\n\n\n\nWe will be working with Docker CE (Community Edition) as an Open Source Project.\n\n\n\n\nInstalling for Macs\n\n\nSystem Requirements\n\n\n\n\n\n\nMac hardware must be a 2010 or newer model, with Intel\u2019s hardware support for memory management unit (MMU) virtualization; i.e., Extended Page Tables (EPT) and Unrestricted Mode. You can check to see if your machine has this support by running the following command in a terminal: sysctl kern.hv_support\n\n\n\n\n\n\nmacOS El Capitan 10.11 and newer macOS releases are supported. At a minimum, Docker for Mac requires macOS Yosemite 10.10.3 or newer, with the caveat that going forward 10.10.x is a use-at-your-own risk proposition.\n\n\n\n\n\n\nStarting with Docker for Mac Stable release 1.13, and concurrent Edge releases, we will no longer address issues specific to macOS Yosemite 10.10. In future releases, Docker for Mac could stop working on macOS Yosemite 10.10 due to the deprecated status of this macOS version. We recommend upgrading to the latest version of macOS.\n\n\n\n\n\n\nAt least 4GB of RAM\n\n\n\n\n\n\nVirtualBox prior to version 4.3.30 must NOT be installed (it is incompatible with Docker for Mac). If you have a newer version of VirtualBox installed, it\u2019s fine.\n\n\n\n\n\n\nIf your system does not meet these minimum requirements you will not be able to run Docker for Mac. You may attempt to run using \nDocker Toolbox\n but this has not been tested and we may have limited assistance to troubleshoot issues.\n\n\nInstallation\n\n\nWhen you are ready follow Docker's Official Guide to install Docker for Mac:\n\n\nDocker for Mac Installation\n\n\nAll work should be done using the \"Stable\" build.\n\n\nInstalling for Windows\n\n\nInstalling for Ubuntu/Linux Systems\n\n\nYou will want to consult Docker's Guides to installation on Linux Systems:\n\n\n\n\nUbuntu\n\n\nDebian\n\n\nCentOS\n\n\nFedora",
            "title": "Docker Environment"
        },
        {
            "location": "/docker/#docker-environment",
            "text": "This portion of the guide, will walk through setting up the Docker Environment to be used for development and deployment of the 2018 Hack Oregon Transportation Systems project.  It will also provide some introductory information into Docker to help our volunteers get up and running in this project season.",
            "title": "Docker Environment"
        },
        {
            "location": "/docker/#getting-started-what-is-docker",
            "text": "If you are not familiar with Docker, your first step should be understanding the basics of Docker, ie how it works, some terms, and how it is different then running a full virtual machine like Vagrant.  I would suggest watching this video to get a short introduction into Docker:  Docker Tutorial - What is Docker & Docker Containers, Images, etc?  This is also a great guide to review:  A Beginner-Friendly Introduction to Containers, VMs and Docker  Next, you will need to install Docker if you have not already...",
            "title": "Getting Started - What is Docker?"
        },
        {
            "location": "/docker/#installing-docker",
            "text": "Instead of providing specific instructions here, we will link to the Docker guides on installing.   We will be working with Docker CE (Community Edition) as an Open Source Project.",
            "title": "Installing Docker"
        },
        {
            "location": "/docker/#installing-for-macs",
            "text": "System Requirements    Mac hardware must be a 2010 or newer model, with Intel\u2019s hardware support for memory management unit (MMU) virtualization; i.e., Extended Page Tables (EPT) and Unrestricted Mode. You can check to see if your machine has this support by running the following command in a terminal: sysctl kern.hv_support    macOS El Capitan 10.11 and newer macOS releases are supported. At a minimum, Docker for Mac requires macOS Yosemite 10.10.3 or newer, with the caveat that going forward 10.10.x is a use-at-your-own risk proposition.    Starting with Docker for Mac Stable release 1.13, and concurrent Edge releases, we will no longer address issues specific to macOS Yosemite 10.10. In future releases, Docker for Mac could stop working on macOS Yosemite 10.10 due to the deprecated status of this macOS version. We recommend upgrading to the latest version of macOS.    At least 4GB of RAM    VirtualBox prior to version 4.3.30 must NOT be installed (it is incompatible with Docker for Mac). If you have a newer version of VirtualBox installed, it\u2019s fine.    If your system does not meet these minimum requirements you will not be able to run Docker for Mac. You may attempt to run using  Docker Toolbox  but this has not been tested and we may have limited assistance to troubleshoot issues.  Installation  When you are ready follow Docker's Official Guide to install Docker for Mac:  Docker for Mac Installation  All work should be done using the \"Stable\" build.",
            "title": "Installing for Macs"
        },
        {
            "location": "/docker/#installing-for-windows",
            "text": "",
            "title": "Installing for Windows"
        },
        {
            "location": "/docker/#installing-for-ubuntulinux-systems",
            "text": "You will want to consult Docker's Guides to installation on Linux Systems:   Ubuntu  Debian  CentOS  Fedora",
            "title": "Installing for Ubuntu/Linux Systems"
        },
        {
            "location": "/geodjango/",
            "text": "GEODJANGO Container\n\n\nThese steps should get you up and running with the GeoDjango Container. These processes are open to improvement. Follow Hack Oregon and Team guidelines for development and submitting a Pull Request.\n\n\nThis guide attempts to walk through some best practices, strategies that will make your life easier but code changes. Docs are only alive as their users contribute to them.\n\n\nWe are roughly following\n\n\nCreate new project repo\n\n\nFirst go ahead a create the new repo for the project. If this is a Hack Oregon project, create the repo within the Hack Oregon organization. If you are unable to, contact a member of the leadership team.\n\n\nWhen creating the repo in the UI, you should go ahead and select the Python .gitignore template as well as your desired license template.\n\n\nOnce the repo is created, clone the empty repo to your local machine. Follow your project rules in terms of branching and git workflow. I will not mention this going forward but will say I suggest branching at this point.\n\n\nCreate GEODJANGO DOCKERFILE\n\n\nFor the GeoDjango container, which can be used as the basis for any project needing to provide a Django Rest Framework API to serve GIS based data this would be your basic template:\n\n\nFROM bhgrant/hacko-geodjango\nENV PYTHONUNBUFFERED 1\nEXPOSE 8000\n\nWORKDIR /code\nCOPY requirements.txt /code/\nRUN pip install -r requirements.txt\nRUN python\nCOPY . /code/\nENTRYPOINT [ \"/code/bin/docker-entrypoint.sh\" ]\n\n\n\n\nLet's Break this Down\n\n\nFROM bhgrant/hacko-geodjango\n - First Step of the pulls the base image from Dockerhub and builds a container from this locally. See the Github Repo for this image to see what this includes.\n\n\nENV PYTHONUNBUFFERED 1\n - Sets the PYTHONUNBUFFERED environment variable\n\n\nEXPOSE 8000\n - opens this port\n\n\nWORKDIR /code\n This sets the current directory (the code directory exits in the docker image)\n\nCOPY requirements.txt /code/  \nRUN pip install -r requirements.txt\n - These lines copy the requirements.txt file into the base directory of the image ('/code') and then runs pip install to install any of the specified packages. You will want to add any new packages that you need into this file. Be sure to specify the version number to avoid packages being updated upon a new run of docker build.\n\n\nRUN python\n - confirms python is working\n\n\nCOPY . /code/\n creates a new layer copying rest of the local directory into the docker image (this moves your actual app code into the image)  \n\n\nENTRYPOINT [ \"/code/bin/docker-entrypoint.sh\" ]\n The command or shell script that the container will run as default. This may be overridden in the docker-compose file or a CLI command.  \n\n\nCreate GeoDjango Entrypoint files\n\n\nIn order to organize the files a bit easier, let's go ahead and create a bin folder:\n\n\n$ cd <Local Github repo>\n$ mkdir bin\n$ cd bin\n\n\n\n\nNow we could go ahead and just name this new file \ndocker-entrypoint.sh\n, the name we specified in the \nENTRYPOINT\n line in the DOCKERFILE, but let's think ahead a bit. We may need to take some different startup steps if creating a local build vs. testing build vs. production build, or something along these lines.\n\n\nLet's go ahead and create entrypoint files that reflect the environment, starting with the local/development build:\n\n\n\n\n$ touch local-geodjango-entrypoint.sh\n\n\n\n\nNow let's open this file up in your text editor of choice.\n\n\nAt this point you may only be entering in the basic django startup command to run the dev server environment:\n\n\n#! /bin/bash\n\npython3 manage.py runserver 0.0.0.0:8000\n\n\n\n\nGo ahead and save this file.\n\n\nCreate the Requirements.txt file\n\n\nOk, now let's go back and look at the DOCKERFILE.\n\n\n...\nCOPY requirements.txt /code/\nRUN pip install -r requirements.txt\n...\n\n\n\n\nNotice the requirements.txt? Well lets go ahead and create this.\n\n\nIf you are not familiar with python, the requirements.txt file is will you will list all the python package requirements for the project. PIP will install these packages upon build and startup of the container depending on if any changes are detected.\n\n\nIf you were using the official Docker Python image, you would be adding in all the necessary packages into this file for Django, DRF, your database connector, and so on. However the GEODJANGO docker image in this repo has many of the necessary packages already installed, so you will not have to include them. See the \ngeodjango-requirements.txt\n file.\n\n\nOk, so we got a good base for building the API but what about packages that are going to be useful in your API?\n\n\nThis is where you will adding a new requirements.txt file into your repo comes into play.\n\n\nThink about where to put this, in root directory or possibly in a subfolder, if your use case may require multiple requirements files. If so you will need to change your path to this file in the DOCKERFILE.\n\n\nNow add your packages here when you need. I would strongly advise specifying version numbers. Otherwise you may run into compatibility issues if the container is rebuilt as it will be checking for the current version anytime the container is rebuilt.\n\n\nCreate the Docker-Compose.yml files\n\n\nSo we have most of the raw pieces of our development setup now (we'll talk database in a moment)\n\n\nOur docker-compose.yml file will link this all together.\n\n\nHere is the base template (you'll find this example in /composefiles/geodjango-compose.yml):\n\n\nAgain you may want to pay attention to the environment in naming though it will link all the services together, so you can drop the service name.\n\n\nIE: \nlocal-compose.yml\n\n\nversion: '3'\nservices:\n  db:\n    image: znmeb/postgis\n    environment:\n      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n      - POSTGRES_USER=${POSTGRES_USER}\n  api:\n    environment:\n    - DEBUG=${DEBUG}\n    - PROJECT_NAME=${PROJECT_NAME}\n    build:\n      context: ..\n      dockerfile: /dockerfiles/GEODJANGO-DOCKERFILE\n    image: \"${API_DOCKER_IMAGE}\"\n    command: ./entrypoints/GEODJANGO-entrypoint.sh\n    volumes:\n      - ..:/code\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - db\n\n\n\n\nThe \nDocker-Compose Reference | Docker\n will be your source of truth on the individual pieces of this.\n\n\nA few things to make note of:\n\n\n\n\nString interpolation - ${VARIABLE} - these are environment variables being passed into the container (These will be set in the env.sh file to be discussed.)\n\n\ncontext: ..\n -  a string containing a path to the build. This is a relative path so this is stepping back one step in the directory structure (think \ncd ..\n), you may not want this, depending on location of compose file.\n\n\nThis is using @znmeb's \nPostGIS image\n for the database. The depends_on, means it will wait to create the api until the db is up and working to prevent an error if db is unavailable.\n\n\n\n\nCreate an Environment file and add to .gitignore\n\n\nFirst go ahead and add this to your .gitignore and save:\n\n\n**/env.sh\n\n\n\n\nIF you name your environment file anything else be sure this is in the .gitignore\n\n\nNow in your bin folder create you env.sh file.\n\n\nThere is a rough template in the bin directory of this repo:\n\n\n./bin/env.sh.sample\n\n\n\n\nEnvironment variables will be important to moving the code through the stages of development from local dev to testing to eventually prod. They are also vital to \nkeeping secrets out of public or private code repositories\n\n\nAt this point you will only need to set the variables that are being specified in the Docker-Compose file.\n\n\nDo not push an image which contains secrets to DockerHub\n\n\nBuilding the Container and App First Time\n\n\nFor the first time you are getting the container up and running you should follow the basic steps in the \nQuickstart: Compose and Django Container | Docker\n from this point on:\n\n\nCreate a Django Project | Docker\n.\n\n\nA few notes:\n\n If you have followed the templates provided the names of services and other variables may not directly match those in the example\n\n An example command that can use the env variables (make sure to \nsource\n the file before): \ndocker-compose -f ./composefiles/geodjango-compose.yml -p $PROJECT_NAME run api django-admin.py startproject $PROJECT_NAME .\n\n\nThen you will also need to follow similar steps to configure the Django Rest Framework following their \nQuickstart Guide | Django Rest Framework\n within the docker container.\n* As you have already created the Django project, you will not do this again, just start with the startapp. Instead of running this within the project directory, run it in the root. so the project and app directories will be both children of the root directory.\n\n\nIn testing I had more success running these commands through an interactive Bash Shell in the container. To get that going follow the next steps to start up the container. With the container running, open an new terminal window and run:\n\n\ndocker exec -it <YOUR_CONTAINER_NAME> /bin/bash\n\n\n\n\nThis should open a SSH session into the docker container. You should then be able to run any commands needed.\n\n\nStarting the app\n\n\nCheckout the \n/bin/start-project.sh\n file in this repo for examples on how to start the cotainer. As Docker-Compose and Docker CLI commands can become quite complex, you should create a similar script file to make restarting the container easy.\n\n\nThis will be important in the deployment chain as well, as you may run different startup commands based on the environment.\n\n\n\n\nNote you also will see the \nkill.sh\n file in the bin directory. These are the basic commands that you can use to kill the container or remove the image completely from your hard drive. You may find these handy in development if a container ever hangs on or you want to start from scratch to test a build.\n\n\n\n\nNext steps\n\n\nStart building your app!.  But there is a lot more config that will come up as you go, especially as we move to building the full tool and deploy chain. Continue to document from here.\n\n\nA good mind set to continue is the \n12 Factor APP",
            "title": "GEODJANGO Container"
        },
        {
            "location": "/geodjango/#geodjango-container",
            "text": "These steps should get you up and running with the GeoDjango Container. These processes are open to improvement. Follow Hack Oregon and Team guidelines for development and submitting a Pull Request.  This guide attempts to walk through some best practices, strategies that will make your life easier but code changes. Docs are only alive as their users contribute to them.  We are roughly following",
            "title": "GEODJANGO Container"
        },
        {
            "location": "/geodjango/#create-new-project-repo",
            "text": "First go ahead a create the new repo for the project. If this is a Hack Oregon project, create the repo within the Hack Oregon organization. If you are unable to, contact a member of the leadership team.  When creating the repo in the UI, you should go ahead and select the Python .gitignore template as well as your desired license template.  Once the repo is created, clone the empty repo to your local machine. Follow your project rules in terms of branching and git workflow. I will not mention this going forward but will say I suggest branching at this point.",
            "title": "Create new project repo"
        },
        {
            "location": "/geodjango/#create-geodjango-dockerfile",
            "text": "For the GeoDjango container, which can be used as the basis for any project needing to provide a Django Rest Framework API to serve GIS based data this would be your basic template:  FROM bhgrant/hacko-geodjango\nENV PYTHONUNBUFFERED 1\nEXPOSE 8000\n\nWORKDIR /code\nCOPY requirements.txt /code/\nRUN pip install -r requirements.txt\nRUN python\nCOPY . /code/\nENTRYPOINT [ \"/code/bin/docker-entrypoint.sh\" ]  Let's Break this Down  FROM bhgrant/hacko-geodjango  - First Step of the pulls the base image from Dockerhub and builds a container from this locally. See the Github Repo for this image to see what this includes.  ENV PYTHONUNBUFFERED 1  - Sets the PYTHONUNBUFFERED environment variable  EXPOSE 8000  - opens this port  WORKDIR /code  This sets the current directory (the code directory exits in the docker image) COPY requirements.txt /code/  \nRUN pip install -r requirements.txt  - These lines copy the requirements.txt file into the base directory of the image ('/code') and then runs pip install to install any of the specified packages. You will want to add any new packages that you need into this file. Be sure to specify the version number to avoid packages being updated upon a new run of docker build.  RUN python  - confirms python is working  COPY . /code/  creates a new layer copying rest of the local directory into the docker image (this moves your actual app code into the image)    ENTRYPOINT [ \"/code/bin/docker-entrypoint.sh\" ]  The command or shell script that the container will run as default. This may be overridden in the docker-compose file or a CLI command.",
            "title": "Create GEODJANGO DOCKERFILE"
        },
        {
            "location": "/geodjango/#create-geodjango-entrypoint-files",
            "text": "In order to organize the files a bit easier, let's go ahead and create a bin folder:  $ cd <Local Github repo>\n$ mkdir bin\n$ cd bin  Now we could go ahead and just name this new file  docker-entrypoint.sh , the name we specified in the  ENTRYPOINT  line in the DOCKERFILE, but let's think ahead a bit. We may need to take some different startup steps if creating a local build vs. testing build vs. production build, or something along these lines.  Let's go ahead and create entrypoint files that reflect the environment, starting with the local/development build:   $ touch local-geodjango-entrypoint.sh   Now let's open this file up in your text editor of choice.  At this point you may only be entering in the basic django startup command to run the dev server environment:  #! /bin/bash\n\npython3 manage.py runserver 0.0.0.0:8000  Go ahead and save this file.",
            "title": "Create GeoDjango Entrypoint files"
        },
        {
            "location": "/geodjango/#create-the-requirementstxt-file",
            "text": "Ok, now let's go back and look at the DOCKERFILE.  ...\nCOPY requirements.txt /code/\nRUN pip install -r requirements.txt\n...  Notice the requirements.txt? Well lets go ahead and create this.  If you are not familiar with python, the requirements.txt file is will you will list all the python package requirements for the project. PIP will install these packages upon build and startup of the container depending on if any changes are detected.  If you were using the official Docker Python image, you would be adding in all the necessary packages into this file for Django, DRF, your database connector, and so on. However the GEODJANGO docker image in this repo has many of the necessary packages already installed, so you will not have to include them. See the  geodjango-requirements.txt  file.  Ok, so we got a good base for building the API but what about packages that are going to be useful in your API?  This is where you will adding a new requirements.txt file into your repo comes into play.  Think about where to put this, in root directory or possibly in a subfolder, if your use case may require multiple requirements files. If so you will need to change your path to this file in the DOCKERFILE.  Now add your packages here when you need. I would strongly advise specifying version numbers. Otherwise you may run into compatibility issues if the container is rebuilt as it will be checking for the current version anytime the container is rebuilt.",
            "title": "Create the Requirements.txt file"
        },
        {
            "location": "/geodjango/#create-the-docker-composeyml-files",
            "text": "So we have most of the raw pieces of our development setup now (we'll talk database in a moment)  Our docker-compose.yml file will link this all together.  Here is the base template (you'll find this example in /composefiles/geodjango-compose.yml):  Again you may want to pay attention to the environment in naming though it will link all the services together, so you can drop the service name.  IE:  local-compose.yml  version: '3'\nservices:\n  db:\n    image: znmeb/postgis\n    environment:\n      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}\n      - POSTGRES_USER=${POSTGRES_USER}\n  api:\n    environment:\n    - DEBUG=${DEBUG}\n    - PROJECT_NAME=${PROJECT_NAME}\n    build:\n      context: ..\n      dockerfile: /dockerfiles/GEODJANGO-DOCKERFILE\n    image: \"${API_DOCKER_IMAGE}\"\n    command: ./entrypoints/GEODJANGO-entrypoint.sh\n    volumes:\n      - ..:/code\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      - db  The  Docker-Compose Reference | Docker  will be your source of truth on the individual pieces of this.  A few things to make note of:   String interpolation - ${VARIABLE} - these are environment variables being passed into the container (These will be set in the env.sh file to be discussed.)  context: ..  -  a string containing a path to the build. This is a relative path so this is stepping back one step in the directory structure (think  cd .. ), you may not want this, depending on location of compose file.  This is using @znmeb's  PostGIS image  for the database. The depends_on, means it will wait to create the api until the db is up and working to prevent an error if db is unavailable.",
            "title": "Create the Docker-Compose.yml files"
        },
        {
            "location": "/geodjango/#create-an-environment-file-and-add-to-gitignore",
            "text": "First go ahead and add this to your .gitignore and save:  **/env.sh  IF you name your environment file anything else be sure this is in the .gitignore  Now in your bin folder create you env.sh file.  There is a rough template in the bin directory of this repo:  ./bin/env.sh.sample  Environment variables will be important to moving the code through the stages of development from local dev to testing to eventually prod. They are also vital to  keeping secrets out of public or private code repositories  At this point you will only need to set the variables that are being specified in the Docker-Compose file.  Do not push an image which contains secrets to DockerHub",
            "title": "Create an Environment file and add to .gitignore"
        },
        {
            "location": "/geodjango/#building-the-container-and-app-first-time",
            "text": "For the first time you are getting the container up and running you should follow the basic steps in the  Quickstart: Compose and Django Container | Docker  from this point on:  Create a Django Project | Docker .  A few notes:  If you have followed the templates provided the names of services and other variables may not directly match those in the example  An example command that can use the env variables (make sure to  source  the file before):  docker-compose -f ./composefiles/geodjango-compose.yml -p $PROJECT_NAME run api django-admin.py startproject $PROJECT_NAME .  Then you will also need to follow similar steps to configure the Django Rest Framework following their  Quickstart Guide | Django Rest Framework  within the docker container.\n* As you have already created the Django project, you will not do this again, just start with the startapp. Instead of running this within the project directory, run it in the root. so the project and app directories will be both children of the root directory.  In testing I had more success running these commands through an interactive Bash Shell in the container. To get that going follow the next steps to start up the container. With the container running, open an new terminal window and run:  docker exec -it <YOUR_CONTAINER_NAME> /bin/bash  This should open a SSH session into the docker container. You should then be able to run any commands needed.",
            "title": "Building the Container and App First Time"
        },
        {
            "location": "/geodjango/#starting-the-app",
            "text": "Checkout the  /bin/start-project.sh  file in this repo for examples on how to start the cotainer. As Docker-Compose and Docker CLI commands can become quite complex, you should create a similar script file to make restarting the container easy.  This will be important in the deployment chain as well, as you may run different startup commands based on the environment.   Note you also will see the  kill.sh  file in the bin directory. These are the basic commands that you can use to kill the container or remove the image completely from your hard drive. You may find these handy in development if a container ever hangs on or you want to start from scratch to test a build.",
            "title": "Starting the app"
        },
        {
            "location": "/geodjango/#next-steps",
            "text": "Start building your app!.  But there is a lot more config that will come up as you go, especially as we move to building the full tool and deploy chain. Continue to document from here.  A good mind set to continue is the  12 Factor APP",
            "title": "Next steps"
        },
        {
            "location": "/howtouse/",
            "text": "How-to Use these Docker Images\n\n\nThis repo is only meant for the source files for the image itself. If you are using the image for development you will want to follow the steps in this guide.\n\n\nThese instructions are largely based on the \nDocker Quickstart Guide to Docker and Django| Docker\n.\n\n\nCreate new project repo\n\n\nFirst go ahead a create the new repo for the project. If this is a Hack Oregon project, create the repo within the Hack Oregon organization. If you are unable to, contact a member of the leadership team. When creating the repo in the UI, you may want to choose a .gitignore template as well as licence type.\n\n\nOnce the repo is created, clone the empty repo to your local machine. Follow your project rules in terms of branching and git workflow. I will not mention this going forward but will say I suggest branching at this point.\n\n\nCreate the DOCKERFILE\n\n\nNow you will want to go ahead and create the DOCKERFILE that will be used to define your container. You will need a DOCKERFILE for each container that will be involved in your project. As such you may want to name them \n-DOCKERFILE, ie: API-DOCKERFILE and DB-DOCKERFILE\n\n\nCreate the Entrypoint files\n\n\nYou will have a few steps to the startup of the container, thus you will want to define a shell script to run when starting up the docker container.\n\n\nThink about the steps in this. It will be things you want to happen each time the container starts. Too long of startup may cause the container to fail later healthchecks on EC2",
            "title": "How-to Use these Docker Images"
        },
        {
            "location": "/howtouse/#how-to-use-these-docker-images",
            "text": "This repo is only meant for the source files for the image itself. If you are using the image for development you will want to follow the steps in this guide.  These instructions are largely based on the  Docker Quickstart Guide to Docker and Django| Docker .",
            "title": "How-to Use these Docker Images"
        },
        {
            "location": "/howtouse/#create-new-project-repo",
            "text": "First go ahead a create the new repo for the project. If this is a Hack Oregon project, create the repo within the Hack Oregon organization. If you are unable to, contact a member of the leadership team. When creating the repo in the UI, you may want to choose a .gitignore template as well as licence type.  Once the repo is created, clone the empty repo to your local machine. Follow your project rules in terms of branching and git workflow. I will not mention this going forward but will say I suggest branching at this point.",
            "title": "Create new project repo"
        },
        {
            "location": "/howtouse/#create-the-dockerfile",
            "text": "Now you will want to go ahead and create the DOCKERFILE that will be used to define your container. You will need a DOCKERFILE for each container that will be involved in your project. As such you may want to name them  -DOCKERFILE, ie: API-DOCKERFILE and DB-DOCKERFILE",
            "title": "Create the DOCKERFILE"
        },
        {
            "location": "/howtouse/#create-the-entrypoint-files",
            "text": "You will have a few steps to the startup of the container, thus you will want to define a shell script to run when starting up the docker container.  Think about the steps in this. It will be things you want to happen each time the container starts. Too long of startup may cause the container to fail later healthchecks on EC2",
            "title": "Create the Entrypoint files"
        },
        {
            "location": "/LICENSE/",
            "text": "GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007\n\n\nCopyright (C) 2007 Free Software Foundation, Inc. \nhttp://fsf.org/\n\nEveryone is permitted to copy and distribute verbatim copies\nof this license document, but changing it is not allowed.\n\n\n                    Preamble\n\n\n\nThe GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n\nThe licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n\nWhen we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n\nTo protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n\nFor example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n\nDevelopers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n\nFor the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n\nSome devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n\nFinally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n\nThe precise terms and conditions for copying, distribution and\nmodification follow.\n\n\n               TERMS AND CONDITIONS\n\n\n\n\n\nDefinitions.\n\n\n\n\n\"This License\" refers to version 3 of the GNU General Public License.\n\n\n\"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n\n\"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n\nTo \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n\nA \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n\nTo \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n\nTo \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n\nAn interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n\n\n\nSource Code.\n\n\n\n\nThe \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n\nA \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n\nThe \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n\nThe \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n\nThe Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n\nThe Corresponding Source for a work in source code form is that\nsame work.\n\n\n\n\nBasic Permissions.\n\n\n\n\nAll rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n\nYou may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n\nConveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n\n\n\nProtecting Users' Legal Rights From Anti-Circumvention Law.\n\n\n\n\nNo covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n\n\n\nConveying Verbatim Copies.\n\n\n\n\nYou may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n\nYou may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n\n\n\nConveying Modified Source Versions.\n\n\n\n\nYou may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n\na) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\n\n\nA compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n\n\n\nConveying Non-Source Forms.\n\n\n\n\nYou may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n\na) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\n\n\nA separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n\n\"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n\nCorresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n\n\n\nAdditional Terms.\n\n\n\n\n\"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n\nWhen you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n\nNotwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n\na) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\n\n\nAll other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n\nIf you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n\nAdditional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n\n\n\nTermination.\n\n\n\n\nYou may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n\nHowever, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n\n\n\nAcceptance Not Required for Having Copies.\n\n\n\n\nYou are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n\n\n\nAutomatic Licensing of Downstream Recipients.\n\n\n\n\nEach time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n\nYou may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n\n\n\nPatents.\n\n\n\n\nA \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n\nA contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n\nIn the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n\nIf you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n\nIf, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n\nA patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n\nNothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n\n\n\nNo Surrender of Others' Freedom.\n\n\n\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n\n\n\nUse with the GNU Affero General Public License.\n\n\n\n\nNotwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n\n\n\nRevised Versions of this License.\n\n\n\n\nThe Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n\nEach version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n\nIf the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n\nLater license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n\n\n\nDisclaimer of Warranty.\n\n\n\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n\n\n\nLimitation of Liability.\n\n\n\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n\n\n\nInterpretation of Sections 15 and 16.\n\n\n\n\nIf the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n\n             END OF TERMS AND CONDITIONS\n\n    How to Apply These Terms to Your New Programs\n\n\n\nIf you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n\nTo do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n\n\nCopyright (C) \n  \n\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see \nhttp://www.gnu.org/licenses/\n.\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\n\nIf the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n\n  Copyright (C) \n  \n\nThis program comes with ABSOLUTELY NO WARRANTY; for details type \nshow w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type\nshow c' for details.\n\n\nThe hypothetical commands \nshow w' and\nshow c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n\nYou should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n\nhttp://www.gnu.org/licenses/\n.\n\n\nThe GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n\nhttp://www.gnu.org/philosophy/why-not-lgpl.html\n.",
            "title": "LICENSE"
        }
    ]
}